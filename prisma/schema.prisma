// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  TECHNICIAN
  CLEANING
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String
  role          UserRole  @default(TECHNICIAN)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  tasks         Task[]    @relation("AssignedTasks")
  createdTasks  Task[]    @relation("TaskCreator")
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELED
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

model Task {
  id           String       @id @default(cuid())
  title        String
  description  String?
  status       TaskStatus   @default(PENDING)
  priority     TaskPriority @default(MEDIUM)
  dueDate      DateTime?
  completedAt  DateTime?
  
  assignedTo   User         @relation("AssignedTasks", fields: [assignedToId], references: [id])
  assignedToId String
  
  createdBy    User         @relation("TaskCreator", fields: [createdById], references: [id])
  createdById  String
  
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  
  building     Building     @relation(fields: [buildingId], references: [id])
  buildingId   String
  
  @@index([assignedToId])
  @@index([buildingId])
  @@index([status])
}

model Building {
  id          String    @id @default(cuid())
  name        String
  address     String
  description String?
  image       String?
  tasks       Task[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
